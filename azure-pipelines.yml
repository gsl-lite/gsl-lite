
trigger:
- master
- mr/*

pr:
- master

resources:
  repositories:
    - repository: CImakeshift
      type: github
      name: mbeutel/CImakeshift
      endpoint: gsl-lite
      #ref: refs/tags/0.2

jobs:
- template: azure-pipelines/cmake.yml@CImakeshift
  parameters:
    cache: False
    cmakeBuildConfigurations: [Debug]
    cmakeConfigArgs: '-DGSL_LITE_OPT_BUILD_TESTS=ON -DGSL_LITE_OPT_BUILD_EXAMPLES=ON'
    cmakeTestArgs: '--exclude-regex cuda' # do not run CUDA tests

    targets:

    # put a set of representative (and slow) jobs first

    - os: Linux
      cxxCompiler: GCC
      cxxCompilerVersions: [11]
      cmakeBuildConfigurations: [Debug, RelWithDebInfo]
      platforms: [x64]
      tag: 'memcheck'
      # Make Valgrind return a non-zero exit code when errors occur in order to make the job fail.
      cmakeConfigArgs: '-DGSL_LITE_OPT_BUILD_TESTS=ON -DMEMORYCHECK_COMMAND_OPTIONS="--error-exitcode=1 --leak-check=full"'
      cmakeBuildArgs: '<cmakeBuildArgs> --target gsl-lite-v1-cpp20.t'
      cmakeTestArgs: '<cmakeTestArgs> --test-action memcheck --tests-regex gsl-lite-v1-cpp20'
      postSetupSteps:
      - bash: |
          sudo apt install valgrind
        displayName: 'Install Valgrind'

    - os: Linux
      cxxCompiler: GCC
      cxxCompilerVersions: [9]
      cmakeBuildConfigurations: [Debug, RelWithDebInfo]
      cudaCompiler: NVCC
      cudaCompilerVersions: [11_4]
      platforms: [x64]
      cmakeConfigArgs: '-DGSL_LITE_OPT_BUILD_CUDA_TESTS=ON'

    - os: Linux
      cxxCompiler: Clang
      cxxCompilerVersions: [13]
      cmakeBuildConfigurations: [Debug, RelWithDebInfo]
      platforms: [x64]
      tag: 'memcheck'
      # Make Valgrind return a non-zero exit code when errors occur in order to make the job fail.
      cmakeConfigArgs: '-DGSL_LITE_OPT_BUILD_TESTS=ON -DMEMORYCHECK_COMMAND_OPTIONS="--error-exitcode=1 --leak-check=full"'
      cmakeBuildArgs: '<cmakeBuildArgs> --target gsl-lite-v1-cpp20.t'
      cmakeTestArgs: '<cmakeTestArgs> --test-action memcheck --tests-regex gsl-lite-v1-cpp20'
      postSetupSteps:
      - bash: |
          sudo apt install valgrind
        displayName: 'Install Valgrind'

    - os: Windows
      cxxCompiler: MSVC
      cxxCompilerVersions: [VS2019]
      cmakeGenerator: 'MSBuild' # required for CppCoreCheck
      cmakeBuildConfigurations: [Debug, RelWithDebInfo]
      platforms: [x86, x64]
      cmakeConfigArgs: '<cmakeConfigArgs> -DGSL_LITE_OPT_BUILD_STATIC_ANALYSIS_DEMOS=ON'
      cmakeBuildArgs: '<cmakeBuildArgs> --target gsl-lite-v1-cpplatest.t gsl-lite-v1-cpplatest-CppCoreCheck'
      cmakeTestArgs: '<cmakeTestArgs> --tests-regex gsl-lite-v1-cpplatest'

    - os: Windows
      cxxCompiler: Clang
      cxxCompilerVersions: [VS2019]
      cmakeBuildConfigurations: [Debug, RelWithDebInfo]
      platforms: [x86, x64]
      cmakeBuildArgs: '<cmakeBuildArgs> --target gsl-lite-v1-cpplatest.t'
      cmakeTestArgs: '<cmakeTestArgs> --tests-regex gsl-lite-v1-cpplatest'

    - os: Windows
      cxxCompiler: MSVC
      cxxCompilerVersions: [VS2019]
      cudaCompiler: NVCC
      cudaCompilerVersions: [11_4]
      cmakeBuildConfigurations: [Debug, RelWithDebInfo]
      platforms: [x64]
      cmakeConfigArgs: '-DGSL_LITE_OPT_BUILD_CUDA_TESTS=ON'

    - os: MacOS
      cxxCompiler: AppleClang
      cxxCompilerVersions: [13]
      cmakeBuildConfigurations: [Debug, RelWithDebInfo]
      platforms: [x64]
      cmakeBuildArgs: '<cmakeBuildArgs> --target gsl-lite-v1-cpp17.t'
      cmakeTestArgs: '<cmakeTestArgs> --tests-regex gsl-lite-v1-cpp17'

    # GCC 4.7, 4.8, 4.9, and 5 are tested with Travis
    #- os: Linux
    #  cxxCompiler: GCC
    #  cxxCompilerVersions: [5]
    #  platforms: [x64]

    - os: Linux
      cxxCompiler: GCC
      cxxCompilerVersions: [6, 7, 8, 9, 10, 11]
      platforms: [x64]

    - os: Linux
      cxxCompiler: GCC
      cxxCompilerVersions: [11]
      cxxStandardLibraryDebugMode: true
      cxxSanitizers: [AddressSanitizer, UndefinedBehaviorSanitizer]
      platforms: [x64]
      tag: 'sanitize'
      cmakeConfigArgs: '-DGSL_LITE_OPT_BUILD_TESTS=ON'
      cmakeBuildArgs: '<cmakeBuildArgs> --target gsl-lite-v1-cpp17.t'
      cmakeTestArgs: '<cmakeTestArgs> --tests-regex gsl-lite-v1-cpp17'

    # Clang 3.5, 3.6, 3.7, 3.8, and 3.9 are tested with Travis
    #- os: Linux
    #  cxxCompiler: Clang
    #  cxxCompilerVersions: [4]
    #  platforms: [x64]

    - os: Linux
      cxxCompiler: Clang
      cxxCompilerVersions: [4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
      platforms: [x64]

    - os: Linux
      cxxCompiler: Clang
      cxxCompilerVersions: [13]
      cxxStandardLibraryDebugMode: true
      cxxSanitizers: [AddressSanitizer, UndefinedBehaviorSanitizer, ImplicitIntegerArithmeticValueChange]
      platforms: [x64]
      tag: 'sanitize'
      cmakeConfigArgs: '-DGSL_LITE_OPT_BUILD_TESTS=ON'
      cmakeBuildArgs: '<cmakeBuildArgs> --target gsl-lite-v1-cpp17.t'
      cmakeTestArgs: '<cmakeTestArgs> --tests-regex gsl-lite-v1-cpp17'

    - os: Linux
      cxxCompiler: Clang
      cxxCompilerVersions: [13]
      cxxStandardLibrary: libstdc++
      platforms: [x64]
      tag: 'libstdc++'

    - os: Linux
      cxxCompiler: GCC
      cxxCompilerVersions: [6]
      cudaCompiler: NVCC
      cudaCompilerVersions: [10_2]
      platforms: [x64]
      cmakeConfigArgs: '-DGSL_LITE_OPT_BUILD_CUDA_TESTS=ON'

    # VS 2010, 2012, 2013, and 2015 are tested with AppVeyor

    - os: Windows
      cxxCompiler: MSVC
      cxxCompilerVersions: [VS2019]
      cudaCompiler: NVCC
      cudaCompilerVersions: [10_2]
      platforms: [x64]
      cmakeConfigArgs: '-DGSL_LITE_OPT_BUILD_CUDA_TESTS=ON'

    - os: Windows
      cxxCompiler: MSVC
      cxxCompilerVersions: [VS2017, VS2019]
      platforms: [x86, x64]

    - os: MacOS
      cxxCompiler: GCC
      cxxCompilerVersions: [6, 7, 8, 9, 10, 11]
      platforms: [x64]

    - os: MacOS
      cxxCompiler: AppleClang
      cxxCompilerVersions: [9_1, 10, 10_0_1, 11, 11_0_3, 12, 12_0_5, 13]
      platforms: [x64]
